        -:    0:Source:/mnt/d/github/a45-tavi255/tests/test.cpp
        -:    0:Graph:/mnt/d/github/a45-tavi255/cmake-build-debug-coverage/CMakeFiles/a45_tavi255.dir/tests/test.cpp.gcno
        -:    0:Data:/mnt/d/github/a45-tavi255/cmake-build-debug-coverage/CMakeFiles/a45_tavi255.dir/tests/test.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Tavi on 20.03.2021.
        -:    3://
        -:    4:
        -:    5:#include "test.h"
        -:    6:#include "../entity/Tutorial.h"
        -:    7:#include "../repository/Repo.h"
        -:    8:#include "../validator/validator.h"
        -:    9:#include "../services/Services.h"
        -:   10:#include <cassert>
        -:   11:#include <iostream>
        -:   12:
        1:   13:void test_entity()
        -:   14:{
        2:   15:    string title="C++ classes";
        1:   15-block  0
    $$$$$:   15-block  1
    $$$$$:   15-block  2
        2:   16:    string presenter="Derek";
    $$$$$:   16-block  0
    $$$$$:   16-block  1
        2:   17:    string duration="01:30";
    $$$$$:   17-block  0
    $$$$$:   17-block  1
        1:   18:    int nrlikes=32;
        2:   19:    string link="www.fdsfsdf.asa";
    $$$$$:   19-block  0
    $$$$$:   19-block  1
        -:   20:
        2:   21:    Tutorial t(title,presenter,duration,nrlikes,link);
        1:   21-block  0
    $$$$$:   21-block  1
        -:   22:
       1*:   23:    assert(title==t.get_title());
        1:   23-block  0
        1:   23-block  1
    %%%%%:   23-block  2
        1:   23-block  3
       1*:   24:    assert(presenter==t.get_presenter());
        1:   24-block  0
    %%%%%:   24-block  1
        1:   24-block  2
       1*:   25:    assert(duration==t.get_duration());
        1:   25-block  0
    %%%%%:   25-block  1
        1:   25-block  2
       1*:   26:    assert(nrlikes==t.get_likes());
        1:   26-block  0
    %%%%%:   26-block  1
       1*:   27:    assert(link==t.get_link());
        1:   27-block  0
        1:   27-block  1
    %%%%%:   27-block  2
        1:   27-block  3
        -:   28:
       1*:   29:    assert(string("Tutorial: C++ classes presenter: Derek duration: 01:30 nr likes: 32 link: www.fdsfsdf.asa\n")==string(t.print()));
        1:   29-block  0
        1:   29-block  1
    %%%%%:   29-block  2
        1:   29-block  3
    $$$$$:   29-block  4
    $$$$$:   29-block  5
    $$$$$:   29-block  6
    $$$$$:   29-block  7
        -:   30:
        1:   31:    t.set_likes(110);
        -:   32:
       1*:   33:    assert(110==t.get_likes());
        1:   33-block  0
        1:   33-block  1
    %%%%%:   33-block  2
        -:   34:
        1:   35:}
        -:   36:
        1:   37:void test_repo() {
        -:   38:
        2:   39:    string title="C++ classes";
        1:   39-block  0
    $$$$$:   39-block  1
    $$$$$:   39-block  2
        2:   40:    string presenter="Derek";
    $$$$$:   40-block  0
    $$$$$:   40-block  1
        2:   41:    string duration="01:30";
    $$$$$:   41-block  0
    $$$$$:   41-block  1
        1:   42:    int nrlikes=32;
        2:   43:    string link="www.fdsfsdf.asa";
    $$$$$:   43-block  0
    $$$$$:   43-block  1
        -:   44:
        2:   45:    Tutorial t(title,presenter,duration,nrlikes,link);
    $$$$$:   45-block  0
        -:   46:
        2:   47:    Repo<Tutorial>repo;
        1:   47-block  0
    $$$$$:   47-block  1
        -:   48:
       1*:   49:    assert(repo.size()==0);
        1:   49-block  0
    %%%%%:   49-block  1
        -:   50:
        1:   51:    repo.push(t);
        1:   51-block  0
        1:   51-block  1
        1:   51-block  2
    $$$$$:   51-block  3
    $$$$$:   51-block  4
        -:   52:
       1*:   53:    assert(repo.size()==1);
    %%%%%:   53-block  0
        -:   54:
       1*:   55:    assert(repo[0].get_likes()==32);
        1:   55-block  0
        1:   55-block  1
        1:   55-block  2
    %%%%%:   55-block  3
        1:   55-block  4
    $$$$$:   55-block  5
    $$$$$:   55-block  6
        -:   56:
        1:   57:    repo.remove(0);
        -:   58:
       1*:   59:    assert(repo.size()==0);
        1:   59-block  0
    %%%%%:   59-block  1
        -:   60:
        -:   61:
      101:   62:    for(int i=0;i<100;i++)
        1:   62-block  0
      101:   62-block  1
      100:   63:        repo.push(t);
      100:   63-block  0
      100:   63-block  1
      100:   63-block  2
    $$$$$:   63-block  3
    $$$$$:   63-block  4
        -:   64:
       1*:   65:    assert(repo.size()==100);
        1:   65-block  0
    %%%%%:   65-block  1
        -:   66:
        1:   67:    repo.remove(90);
        1:   67-block  0
        -:   68:
        -:   69:    try
        -:   70:    {
        1:   71:        repo.remove(100);
        1:   71-block  0
    #####:   72:        assert(false);
    %%%%%:   72-block  0
        -:   73:    }
        1:   74:    catch (runtime_error & err)
        1:   74-block  0
        -:   75:    {
        -:   76:        assert(true);
        -:   77:
        -:   78:    }
        -:   79:
        1:   80:    title="Titlu";
        1:   81:    presenter="no_name";
        1:   81-block  0
        1:   82:    duration="01:54";
        1:   82-block  0
        1:   83:    nrlikes=112;
        1:   84:    link="www.rtfvffd.com";
        1:   84-block  0
        -:   85:
        2:   86:    Tutorial k(title,presenter,duration,nrlikes,link);
        1:   86-block  0
        1:   86-block  1
    $$$$$:   86-block  2
        -:   87:
        1:   88:    repo.update(5,k);
        1:   88-block  0
        1:   88-block  1
        1:   88-block  2
    $$$$$:   88-block  3
    $$$$$:   88-block  4
        -:   89:
        1:   90:    assert(repo[5].get_title()==title);
        1:   90-block  0
        1:   90-block  1
    $$$$$:   90-block  2
        1:   90-block  3
    $$$$$:   90-block  4
    $$$$$:   90-block  5
        1:   91:    assert(repo[5].get_likes()==112);
        1:   91-block  0
        1:   91-block  1
    $$$$$:   91-block  2
        1:   91-block  3
    $$$$$:   91-block  4
    $$$$$:   91-block  5
        1:   92:    assert(repo[5].get_link()==link);
        1:   92-block  0
        1:   92-block  1
    $$$$$:   92-block  2
        1:   92-block  3
    $$$$$:   92-block  4
    $$$$$:   92-block  5
        1:   93:    assert(repo[5].get_duration()=="01:54");
        1:   93-block  0
        1:   93-block  1
    $$$$$:   93-block  2
        1:   93-block  3
    $$$$$:   93-block  4
    $$$$$:   93-block  5
        1:   94:    assert(repo[5].get_link()==link);
        1:   94-block  0
        1:   94-block  1
    $$$$$:   94-block  2
        1:   94-block  3
    $$$$$:   94-block  4
    $$$$$:   94-block  5
        -:   95:
        1:   96:    Tutorial *p=repo.get_all();
        -:   97:
      101:   98:    delete [] p;
        1:   98-block  0
        1:   98-block  1
       99:   98-block  2
        1:   98-block  3
        -:   99:
        -:  100:
        -:  101://    repo.push(t);
        -:  102://
        -:  103://    assert(repo.size()==1);
        -:  104:
        -:  105:
        -:  106:
        -:  107:
        -:  108:
        -:  109:
        1:  110:}
        -:  111:
        1:  112:void test_validator()
        -:  113:{
        2:  114:    string title="Titlu";
        1:  114-block  0
    $$$$$:  114-block  1
    $$$$$:  114-block  2
        2:  115:    string presenter="No_name";
    $$$$$:  115-block  0
    $$$$$:  115-block  1
        2:  116:    string duration="01:54";
    $$$$$:  116-block  0
    $$$$$:  116-block  1
        1:  117:    int nrlikes=112;
        2:  118:    string link="www.rtfvffd.com";
    $$$$$:  118-block  0
    $$$$$:  118-block  1
        -:  119:
        2:  120:    Tutorial t(title,presenter,duration,nrlikes,link);
    $$$$$:  120-block  0
        -:  121:
        1:  122:    validate(t);
        1:  122-block  0
        1:  122-block  1
        1:  122-block  2
    $$$$$:  122-block  3
    $$$$$:  122-block  4
        -:  123:
        -:  124:
        -:  125:
        1:  126:    link="www.rtfvffdcom";
        -:  127:
        1:  128:    t=Tutorial(title,presenter,duration,nrlikes,link);
        1:  128-block  0
        1:  128-block  1
        -:  129:    try
        -:  130:    {
       2*:  131:        validate(t);
        1:  131-block  0
    %%%%%:  131-block  1
        1:  131-block  2
        1:  131-block  3
    #####:  132:        assert(false);
        -:  133:    }
        1:  134:    catch (runtime_error &err)
        1:  134-block  0
    $$$$$:  134-block  1
        -:  135:    {
        1:  136:        assert(string("Invalid link!\n")==err.what());
        1:  136-block  0
    $$$$$:  136-block  1
        1:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
        -:  137:    }
        -:  138:
        1:  139:    title="";
        1:  140:    presenter="";
        1:  140-block  0
        1:  141:    duration="";
        1:  141-block  0
        1:  142:    nrlikes=-32;
        1:  143:    t=Tutorial(title,presenter,duration,nrlikes,link);
        1:  143-block  0
        1:  143-block  1
        -:  144:
        -:  145:
        -:  146:    try
        -:  147:    {
        2:  148:        validate(t);
        1:  148-block  0
    $$$$$:  148-block  1
        1:  148-block  2
        1:  148-block  3
    =====:  149:        assert(false);
        -:  150:    }
        1:  151:    catch (runtime_error &err)
        1:  151-block  0
        -:  152:    {
        -:  153:        assert(true);
        -:  154:    }
        -:  155:
        -:  156:
        -:  157:
        -:  158:
        -:  159:
        1:  160:}
        -:  161:
        1:  162:void test_services()
        -:  163:{
        2:  164:    string title="Titlu";
        1:  164-block  0
    $$$$$:  164-block  1
    $$$$$:  164-block  2
        2:  165:    string presenter="No_name";
    $$$$$:  165-block  0
    $$$$$:  165-block  1
        2:  166:    string duration="01:54";
    $$$$$:  166-block  0
    $$$$$:  166-block  1
        1:  167:    int nrlikes=112;
        2:  168:    string link="www.rtfvffd.com";
    $$$$$:  168-block  0
    $$$$$:  168-block  1
        -:  169:
        2:  170:    Tutorial t(title,presenter,duration,nrlikes,link);
    $$$$$:  170-block  0
        -:  171:
        2:  172:    Repo<Tutorial>r;
        1:  172-block  0
        1:  172-block  1
    $$$$$:  172-block  2
        -:  173:
        -:  174:
        1:  175:    Services s(&r);
        1:  175-block  0
        -:  176:
        1:  177:    s.add_tutorial(title,presenter,duration,nrlikes,link);
        1:  177-block  0
        1:  177-block  1
        1:  177-block  2
        1:  177-block  3
        1:  177-block  4
        1:  177-block  5
    $$$$$:  177-block  6
    $$$$$:  177-block  7
    $$$$$:  177-block  8
    $$$$$:  177-block  9
    $$$$$:  177-block 10
    $$$$$:  177-block 11
    $$$$$:  177-block 12
    $$$$$:  177-block 13
        -:  178:
       1*:  179:    assert(r.size()==1);
    %%%%%:  179-block  0
        -:  180:
        -:  181:    try {
       5*:  182:        s.add_tutorial(title,presenter,duration,nrlikes,link);
        1:  182-block  0
        1:  182-block  1
        1:  182-block  2
        1:  182-block  3
        1:  182-block  4
    %%%%%:  182-block  5
        1:  182-block  6
        1:  182-block  7
        1:  182-block  8
        1:  182-block  9
        1:  182-block 10
        1:  182-block 11
        1:  182-block 12
        1:  182-block 13
    #####:  183:        assert(false);
        -:  184:    }
        1:  185:    catch (exception &err)
        1:  185-block  0
        -:  186:    {
        -:  187:        assert(true);
        -:  188:    }
        -:  189:
        1:  190:    title="Johnny bravo";
        1:  191:    presenter="Mr John";
        1:  191-block  0
        1:  192:    nrlikes=43;
        -:  193:
        1:  194:    s.update_tutorial(title,presenter,duration,nrlikes,link);
        1:  194-block  0
        1:  194-block  1
        1:  194-block  2
        1:  194-block  3
        1:  194-block  4
        1:  194-block  5
    $$$$$:  194-block  6
    $$$$$:  194-block  7
    $$$$$:  194-block  8
    $$$$$:  194-block  9
    $$$$$:  194-block 10
    $$$$$:  194-block 11
    $$$$$:  194-block 12
    $$$$$:  194-block 13
        -:  195:
        1:  196:    assert(r[0].get_title()==title);
        1:  196-block  0
        1:  196-block  1
    $$$$$:  196-block  2
        1:  196-block  3
    $$$$$:  196-block  4
    $$$$$:  196-block  5
        1:  197:    assert(r[0].get_presenter()==presenter);
        1:  197-block  0
        1:  197-block  1
    $$$$$:  197-block  2
        1:  197-block  3
    $$$$$:  197-block  4
    $$$$$:  197-block  5
        1:  198:    assert(r[0].get_likes()==nrlikes);
        1:  198-block  0
        1:  198-block  1
    $$$$$:  198-block  2
        1:  198-block  3
    $$$$$:  198-block  4
    $$$$$:  198-block  5
        -:  199:
        1:  200:    assert(s.size()==1);
        1:  200-block  0
    $$$$$:  200-block  1
        -:  201:
        1:  202:    assert(r[0].get_link()==link);
        1:  202-block  0
        1:  202-block  1
        1:  202-block  2
    $$$$$:  202-block  3
        1:  202-block  4
    $$$$$:  202-block  5
    $$$$$:  202-block  6
        -:  203:
        -:  204:
        -:  205:
        1:  206:    s.delete_tutorial(link);
        1:  206-block  0
        1:  206-block  1
    $$$$$:  206-block  2
    $$$$$:  206-block  3
        -:  207:
        1:  208:    assert(s.size()==0);
        1:  208-block  0
    $$$$$:  208-block  1
        -:  209:
        -:  210:    try {
        3:  211:        s.delete_tutorial("dsfsdf");
        1:  211-block  0
        1:  211-block  1
    $$$$$:  211-block  2
        1:  211-block  3
        1:  211-block  4
        1:  211-block  5
        1:  211-block  6
    =====:  212:        assert(false);
        -:  213:    }
        1:  214:    catch (runtime_error &err)
        1:  214-block  0
        -:  215:    {
        -:  216:        assert(true);
        -:  217:    }
        -:  218:
        -:  219:    try {
        5:  220:        s.update_tutorial(title,presenter,duration,nrlikes,link);
        1:  220-block  0
        1:  220-block  1
        1:  220-block  2
        1:  220-block  3
    $$$$$:  220-block  4
        1:  220-block  5
        1:  220-block  6
        1:  220-block  7
        1:  220-block  8
        1:  220-block  9
        1:  220-block 10
        1:  220-block 11
        1:  220-block 12
    =====:  221:        assert(false);
        -:  222:    }
        1:  223:    catch (runtime_error &err)
        1:  223-block  0
        -:  224:    {
        -:  225:        assert(true);
        -:  226:    }
        -:  227:
        -:  228:
        -:  229:
        1:  230:    s.add_tutorial(title,presenter,duration,nrlikes,link);
        1:  230-block  0
        1:  230-block  1
        1:  230-block  2
        1:  230-block  3
        1:  230-block  4
    $$$$$:  230-block  5
    $$$$$:  230-block  6
    $$$$$:  230-block  7
    $$$$$:  230-block  8
    $$$$$:  230-block  9
    $$$$$:  230-block 10
    $$$$$:  230-block 11
    $$$$$:  230-block 12
        1:  231:    title="fsfsdfsd";
        1:  232:    presenter="adadad";
        1:  232-block  0
        1:  233:    duration="32:13:3123";
        1:  233-block  0
        1:  234:    link="www.afsdffsdf.";
        1:  234-block  0
        -:  235:
        -:  236:    try
        -:  237:    {
        5:  238:        s.add_tutorial(title,presenter,duration,nrlikes,link);
        1:  238-block  0
        1:  238-block  1
        1:  238-block  2
        1:  238-block  3
        1:  238-block  4
    $$$$$:  238-block  5
        1:  238-block  6
        1:  238-block  7
        1:  238-block  8
        1:  238-block  9
        1:  238-block 10
        1:  238-block 11
        1:  238-block 12
        1:  238-block 13
    =====:  239:        assert(false);
        -:  240:    }
        1:  241:    catch (runtime_error &err)
        1:  241-block  0
        -:  242:    {
        -:  243:        assert(true);
        -:  244:    }
        -:  245:
        1:  246:    Tutorial *p=s.get_all();
        -:  247:
        1:  248:    title="Johnny bravo";
        1:  248-block  0
        1:  249:    presenter="Mr John";
        1:  249-block  0
        1:  250:    nrlikes=43;
        1:  251:    duration="01:54";
        1:  251-block  0
        -:  252:
        1:  253:    link="www.rtfvffd.com";
        1:  253-block  0
        -:  254:
        1:  255:    assert(p->get_link()==link);
        1:  255-block  0
        1:  255-block  1
    $$$$$:  255-block  2
        1:  255-block  3
        1:  256:    assert(p->get_likes()==nrlikes);
        1:  256-block  0
    $$$$$:  256-block  1
        1:  257:    assert(p->get_presenter()==presenter);
        1:  257-block  0
        1:  257-block  1
    $$$$$:  257-block  2
        1:  257-block  3
        1:  258:    assert(p->get_title()==title);
        1:  258-block  0
    $$$$$:  258-block  1
        1:  258-block  2
        1:  259:    assert(p->get_duration()==duration);
        1:  259-block  0
    $$$$$:  259-block  1
        1:  259-block  2
        -:  260:
        3:  261:    delete []p;
        1:  261-block  0
        1:  261-block  1
        1:  261-block  2
        -:  262:
        -:  263:
        -:  264:
        -:  265:
        -:  266:
        -:  267:
        -:  268:
        -:  269:
        1:  270:}
        -:  271:
        -:  272:
        -:  273:
        1:  274:void test_all()
        -:  275:{
        1:  276:    test_entity();
        1:  276-block  0
        1:  277:    test_repo();
        1:  278:    test_validator();
        1:  279:    test_services();
        1:  280:}
